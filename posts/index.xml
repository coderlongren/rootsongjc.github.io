<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Jimmy Song</title>
    <link>https://jimmysong.io/posts/</link>
    <description>Recent content in Posts on Jimmy Song</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-hans</language>
    <managingEditor>rootsongjc@gmail.com (Jimmy Song)</managingEditor>
    <webMaster>rootsongjc@gmail.com (Jimmy Song)</webMaster>
    <lastBuildDate>Mon, 02 Oct 2017 09:18:27 +0800</lastBuildDate>
    
	<atom:link href="https://jimmysong.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>喜迎国庆节jimmysong.io博客盛装改版</title>
      <link>https://jimmysong.io/posts/jimmysong-io-revision-20171001/</link>
      <pubDate>Mon, 02 Oct 2017 09:18:27 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/jimmysong-io-revision-20171001/</guid>
      <description>经过昨天一天的努力，我的博客(https://jimmysong.io) 成功改版，度过一个十分有意义的国庆节。🎈💐👏 更新记录 2017-10-01 替换了原来的 nixon</description>
    </item>
    
    <item>
      <title>Kubernetes中的Secret配置详解</title>
      <link>https://jimmysong.io/posts/kubernetes-secret-configuration/</link>
      <pubDate>Thu, 28 Sep 2017 21:20:49 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/kubernetes-secret-configuration/</guid>
      <description>Secret 对象类型用来保存敏感信息，例如密码、OAuth 令牌和 ssh key。将这些信息放在 secret 中比放在 pod 的定义中或者 docker 镜像中来说更加安全和灵活。参阅 Secret 设计</description>
    </item>
    
    <item>
      <title>使用gitment为你的网站添加评论框</title>
      <link>https://jimmysong.io/posts/creating-comment-box-with-gitment/</link>
      <pubDate>Sun, 24 Sep 2017 10:10:00 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/creating-comment-box-with-gitment/</guid>
      <description>强烈推荐一个网站评论插件 gitment 。该插件不需要服务端交互，使用 GitHub Issue 存储评论内容，直接在你的博客中引入 JS 代码即可。安装步骤参考 给你的静态博客增加留言</description>
    </item>
    
    <item>
      <title>DockOne社区Kubernetes实训北京站授课感悟</title>
      <link>https://jimmysong.io/posts/kubernetes-training-for-dockone-community/</link>
      <pubDate>Sat, 23 Sep 2017 19:17:08 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/kubernetes-training-for-dockone-community/</guid>
      <description>今天有幸受DockOne社区邀请，作为3 天烧脑式 Kubernetes 实战训练营 | 北京站最后一天培训的讲师，为大家讲解Cloud Native（云原生）和如何开发</description>
    </item>
    
    <item>
      <title>什么是Service Mesh（服务网格）</title>
      <link>https://jimmysong.io/posts/what-is-a-service-mesh/</link>
      <pubDate>Wed, 20 Sep 2017 21:56:04 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/what-is-a-service-mesh/</guid>
      <description>Service mesh 又译作 ”服务网格“，作为服务间通信的基础设施层。Buoyant 公司的 CEO Willian Morgan 在他的这篇文章 WHAT’S A SERVICE MESH? AND WHY DO I NEED ONE? 中解释了什么是 Service M</description>
    </item>
    
    <item>
      <title>Istio Service Mesh官方文档中文版</title>
      <link>https://jimmysong.io/posts/istio-service-mesh-doc-zh/</link>
      <pubDate>Wed, 20 Sep 2017 14:37:23 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/istio-service-mesh-doc-zh/</guid>
      <description>Istio是由Google、IBM和Lyft开源的微服务管理、保护和监控框架。Istio为希腊语，意思是”起航“。官方中文文档地址：http</description>
    </item>
    
    <item>
      <title>Kubernetes中Pod的生命周期</title>
      <link>https://jimmysong.io/posts/pod-lifecycle/</link>
      <pubDate>Tue, 19 Sep 2017 20:41:40 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/pod-lifecycle/</guid>
      <description>Pod 的生命周期对于应用的状态查询、故障检测和恢复是十分重要，比如在 spark on kubernetes 的例子中，spark 任务的状态其实就可以通过查询 driver pod 的状态来获得。这篇</description>
    </item>
    
    <item>
      <title>docker用户过度到kubectl命令行指南</title>
      <link>https://jimmysong.io/posts/docker-cli-to-kubectl/</link>
      <pubDate>Sat, 16 Sep 2017 20:54:06 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/docker-cli-to-kubectl/</guid>
      <description>对于没有使用过 kubernetes 的 docker 用户，如何快速掌握 kubectl 命令？kubectl 跟 docker 命令之间有什么区别和联系？ 在本文中，我们将向 docker-cli 用户介绍 Kubernetes 命令行如何与 api 进行交</description>
    </item>
    
    <item>
      <title>High Level Cloud Native From Kevin Hoffman</title>
      <link>https://jimmysong.io/posts/high-level-cloud-native-from-kevin-hoffman/</link>
      <pubDate>Fri, 15 Sep 2017 20:32:47 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/high-level-cloud-native-from-kevin-hoffman/</guid>
      <description>Kevin Hoffman(From Capital One, twitter @KevinHoffman was making a speech on TalkingData T11 Smart Data Summit. He addressed that 15 Factors of Cloud Native which based on Heroku&amp;rsquo;s original Twelve-Factor App, but he add more 3 another factors on it. Let&amp;rsquo;s have a look at the 15 factors of Cloud Native. 1. One codebase, one App Single version-controlled codebase, many deploys Multiple apps should not share code Microservices need separate</description>
    </item>
    
    <item>
      <title>如何开发部署kubernetes native应用</title>
      <link>https://jimmysong.io/posts/creating-cloud-native-app-with-kubernetes/</link>
      <pubDate>Thu, 14 Sep 2017 19:45:44 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/creating-cloud-native-app-with-kubernetes/</guid>
      <description>摘要 当我们有了一个kubernetes集群后，如何在上面开发和部署应用，应该遵循怎样的流程？本次分享将向您展示如何使用go语言开发和部署一个</description>
    </item>
    
    <item>
      <title>运行支持kubernetes原生调度的spark程序-Spark on Kubernetes</title>
      <link>https://jimmysong.io/posts/running-spark-with-kubernetes-native-scheduler/</link>
      <pubDate>Thu, 14 Sep 2017 15:55:39 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/running-spark-with-kubernetes-native-scheduler/</guid>
      <description>TL;DR 关于 Spark on kubernetes 的详细信息和最新进展请见 jimmysong.io - spark-on-k8s 我们之前就在 kubernetes 中运行过 standalone 方式的 spark 集群，见 Spark standalone on kubernetes。 目前运行支持 kubernetes 原生调度的 spark 程序</description>
    </item>
    
    <item>
      <title>每位CTO都该知道的关于kubernetes的三件事</title>
      <link>https://jimmysong.io/posts/3-things-every-cto-should-know-about-kubernetes/</link>
      <pubDate>Sun, 10 Sep 2017 16:43:27 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/3-things-every-cto-should-know-about-kubernetes/</guid>
      <description>Kubernetes 是一个自动发布、扩缩容和管理容器化应用的开源软件。 尽管kubernetes非常强大，有如此多有用的技术特性，但是工具从来都不会被隔离起来单</description>
    </item>
    
    <item>
      <title>使用Cloudflare为Github Pages博客开启https支持</title>
      <link>https://jimmysong.io/posts/enable-github-pages-https-with-cloudflare/</link>
      <pubDate>Sun, 03 Sep 2017 21:08:18 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/enable-github-pages-https-with-cloudflare/</guid>
      <description>实在受不了无耻的运营商劫持，如下图： 总是在我的网站页面上植入广告，尤其是在微信中打开我的网站链接然后选择在浏览器中打开的时候，最近总是植入广</description>
    </item>
    
    <item>
      <title>kubectl的用户认证授权</title>
      <link>https://jimmysong.io/posts/kubectl-user-authentication-authorization/</link>
      <pubDate>Thu, 31 Aug 2017 14:44:32 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/kubectl-user-authentication-authorization/</guid>
      <description>当我们安装好集群后，如果想要把 kubectl 命令交给用户使用，就不得不对用户的身份进行认证和对其权限做出限制。 下面以创建一个 devuser 用户并将其绑定到 dev 和 test 两个</description>
    </item>
    
    <item>
      <title>迁移传统应用到Kubernetes步骤详解——以Hadoop YARN为例</title>
      <link>https://jimmysong.io/posts/migrating-hadoop-yarn-to-kubernetes/</link>
      <pubDate>Mon, 21 Aug 2017 16:56:45 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/migrating-hadoop-yarn-to-kubernetes/</guid>
      <description>前言 本文已归档到 kubernetes-handbook 【第三章用户指南】的【在Kubernetes中开发部署应用】小节中，一切更新以 GitHub 为准。 本文档不是说明如何在 kubernetes 中开发和部署应</description>
    </item>
    
    <item>
      <title>即日起更换域名为jimmysong.io</title>
      <link>https://jimmysong.io/posts/domain-name-jimmysong-io/</link>
      <pubDate>Fri, 18 Aug 2017 23:48:30 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/domain-name-jimmysong-io/</guid>
      <description>即日起我有了自己的独立域名 jimmysong.io，网站依然托管在 GitHub 上，原来的网址 https://jimmysong.io 依然可以访问。 为什么使用 .io 作为后缀呢？因为这是 The First Step to Cloud</description>
    </item>
    
    <item>
      <title>Kubernetes TLS bootstrap引导程序</title>
      <link>https://jimmysong.io/posts/kubernetes-tls-bootstrapping/</link>
      <pubDate>Wed, 16 Aug 2017 22:27:32 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/kubernetes-tls-bootstrapping/</guid>
      <description>按照 kubernetes-handbook 安装 kubernetes 集群的第一步是什么？没错，创建 TLS 证书和秘钥！作为第一步已经这么繁琐和容易出错，很多人就望而却步了，单纯的按照说明执行命令而不了解</description>
    </item>
    
    <item>
      <title>Cloud Native Python—使用Python和React构建云原生应用</title>
      <link>https://jimmysong.io/posts/cloud-native-python/</link>
      <pubDate>Tue, 15 Aug 2017 22:58:37 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/cloud-native-python/</guid>
      <description>继 Cloud Native Go 之后又一本关于 Cloud Native 的力作已经登上了我的写作日程，这次是基于 Python 构建微服务和云原生 Web 应用程序，书名叫作 Cloud Native Python。 下面是它的英文原</description>
    </item>
    
    <item>
      <title>Linkerd 使用指南</title>
      <link>https://jimmysong.io/posts/linkerd-user-guide/</link>
      <pubDate>Tue, 01 Aug 2017 21:22:55 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/linkerd-user-guide/</guid>
      <description>前言 该文章已归档到 kubernetes-handbook 第五章【领域应用】中，一切内容以 kubernetes-handbook 为准，该文档可能不会及时更新。 以下内容参考：A Service Mesh for Kubernetes Linkerd 作为一款 service mesh 与kubernet</description>
    </item>
    
    <item>
      <title>迁移到云原生应用架构指南</title>
      <link>https://jimmysong.io/posts/migrating-to-cloud-native-architecture/</link>
      <pubDate>Thu, 27 Jul 2017 20:41:55 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/migrating-to-cloud-native-architecture/</guid>
      <description>迁移到云原生应用架构 本书是 Migrating to Cloud Native Application Architectures 的中文版。 本书托管地址 - Github Gitbook 阅读地址 译者序 云时代的云原生应用大势已来，将传统的单体架构应用迁移到云原生</description>
    </item>
    
    <item>
      <title>适用于kubernetes的应用开发与部署流程详解</title>
      <link>https://jimmysong.io/posts/deploy-applications-in-kubernetes/</link>
      <pubDate>Thu, 20 Jul 2017 19:41:53 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/deploy-applications-in-kubernetes/</guid>
      <description>（题图：风和日丽@野三坡 Jul 14,2017） 本文已归档在kubernetes-handbook中的第3章【用户指南】中，一切更新以kubern</description>
    </item>
    
    <item>
      <title>记一本关于kubernetes management design patterns的书</title>
      <link>https://jimmysong.io/posts/book-kubernetes-management-design-patterns/</link>
      <pubDate>Thu, 20 Jul 2017 18:21:18 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/book-kubernetes-management-design-patterns/</guid>
      <description>书名： Kubernetes Management Design Patterns: With Docker, CoreOS Linux, and Other Platforms Amazon购买链接：链接 作者：Deepak Vohra 发行日期：2017年1月20日 出版社：Apress 页数：399 简介</description>
    </item>
    
    <item>
      <title>Kubernetes中的服务发现与docker容器间的环境变量传递源码探究</title>
      <link>https://jimmysong.io/posts/exploring-kubernetes-env-with-docker/</link>
      <pubDate>Wed, 19 Jul 2017 23:15:01 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/exploring-kubernetes-env-with-docker/</guid>
      <description>（题图：雷雨@野三坡 Jul 13,2017） 前言 今天创建了两个kubernetes示例应用： k8s-app-monitor-test：启动serv</description>
    </item>
    
    <item>
      <title>Awesome Cloud Native</title>
      <link>https://jimmysong.io/posts/awesome-cloud-native/</link>
      <pubDate>Tue, 18 Jul 2017 11:21:14 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/awesome-cloud-native/</guid>
      <description>这是一份记录关于Cloud Native的软件、工具、架构以及参考资料的列表，是我在GitHub上开的一个项目 awesome-cloud-na</description>
    </item>
    
    <item>
      <title>企业迁移到云生应用架构时所需做出的变革</title>
      <link>https://jimmysong.io/posts/changes-needed-to-cloud-native-archtecture/</link>
      <pubDate>Sun, 16 Jul 2017 15:04:18 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/changes-needed-to-cloud-native-archtecture/</guid>
      <description>本文译自Migrating to Cloud Native Application Architectures第二部分，归档到 Github - migrating-to-cloud-native-application-architectures 。 在变革中前行 从客户给我们下达订单开始，一直到我们收到现金</description>
    </item>
    
    <item>
      <title>什么是云原生应用架构</title>
      <link>https://jimmysong.io/posts/what-is-cloud-native-application-architecture/</link>
      <pubDate>Sat, 15 Jul 2017 16:25:30 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/what-is-cloud-native-application-architecture/</guid>
      <description>本文译自Migrating to Cloud Native Application Architectures第一部分，归档到 GitHub 。 第1章 云原生的崛起 软件正在吞噬这个世界。—Mark Andreessen 近些年来</description>
    </item>
    
    <item>
      <title>Kubernetes中的数据持久化问题的一个案例讨论与解决方案探究</title>
      <link>https://jimmysong.io/posts/data-persistence-problem/</link>
      <pubDate>Tue, 11 Jul 2017 20:33:21 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/data-persistence-problem/</guid>
      <description>本文已归档到kubernetes-handbook中的【最佳实践—运维管理】章节中，一切内容以kubernetes-handbook为准。 数</description>
    </item>
    
    <item>
      <title>Kubernetes kubectl cheat sheat——Kubectl命令参考图</title>
      <link>https://jimmysong.io/posts/kubernetes-kubectl-cheatsheat/</link>
      <pubDate>Sat, 01 Jul 2017 14:44:23 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/kubernetes-kubectl-cheatsheat/</guid>
      <description>参考 kuberntes API 1.6 版本 绘制。 通过该图可以对kubernetes的客户端命令kubectl有个感性和大体的了解，具体使用方法请参考官方文档。 图片归档在</description>
    </item>
    
    <item>
      <title>微服务中的服务发现方式对比</title>
      <link>https://jimmysong.io/posts/service-discovery-in-microservices/</link>
      <pubDate>Fri, 30 Jun 2017 18:32:19 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/service-discovery-in-microservices/</guid>
      <description>在单体架构时，因为服务不会经常和动态迁移，所有服务地址可以直接在配置文件中配置，所以也不会有服务发现的问题。但是对于微服务来说，应用的拆分，</description>
    </item>
    
    <item>
      <title>使用Jenkins进行持续构建与发布应用到kubernetes集群中</title>
      <link>https://jimmysong.io/posts/kubernetes-jenkins-ci-cd/</link>
      <pubDate>Tue, 27 Jun 2017 20:52:57 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/kubernetes-jenkins-ci-cd/</guid>
      <description>（题图：正午@东直门 Jun 27，2017） 本文已归档到kubernetes-handbook中的【最佳实践—使用Jenkins进行持续构建与发布</description>
    </item>
    
    <item>
      <title>云原生微服务治理框架Linkerd简介</title>
      <link>https://jimmysong.io/posts/linkerd-introduction/</link>
      <pubDate>Mon, 26 Jun 2017 21:02:13 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/linkerd-introduction/</guid>
      <description>（题图：青岛 May 26,2017） 前言 Linkerd是一个用于云原生应用的开源、可扩展的service mesh（一般翻译成服务网格，还有一种说法</description>
    </item>
    
    <item>
      <title>Kubernetes Pod Cheat Sheet——Pod数据结构参考图</title>
      <link>https://jimmysong.io/posts/kubernetes-pod-cheetsheet/</link>
      <pubDate>Sat, 24 Jun 2017 14:20:39 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/kubernetes-pod-cheetsheet/</guid>
      <description>昨天晚上构思，今天花了一上午的时间翻阅了下kubernetes api reference，画了一个Kubernetes Pod Cheat Sheet。 从Pod的数</description>
    </item>
    
    <item>
      <title>使用API blueprint创建API文档</title>
      <link>https://jimmysong.io/posts/creating-api-document-with-api-blueprint/</link>
      <pubDate>Fri, 23 Jun 2017 12:24:12 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/creating-api-document-with-api-blueprint/</guid>
      <description>在进行微服务开发的过程中，为了保证最终开发的系统跟最初的设计保持一致，约定RESTful接口之间的调用方法，我们需要将API设计文档化，因此</description>
    </item>
    
    <item>
      <title>使用Wercker进行持续构建与发布</title>
      <link>https://jimmysong.io/posts/continuous-integration-with-wercker/</link>
      <pubDate>Thu, 22 Jun 2017 18:08:51 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/continuous-integration-with-wercker/</guid>
      <description>本文介绍了wercker和它的基本用法，并用我GitHub上的magpie应用作为示例，讲解如何给GitHub项目增加wercker构建流程</description>
    </item>
    
    <item>
      <title>kubernetes client-go包使用示例</title>
      <link>https://jimmysong.io/posts/kubernetes-client-go-sample/</link>
      <pubDate>Wed, 21 Jun 2017 19:23:45 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/kubernetes-client-go-sample/</guid>
      <description>(题图：青岛栈桥 May 26,2017) 前言 本文将归档到kubernetes-handbook的【开发指南—client-go示例】章节中，最终版本以kuber</description>
    </item>
    
    <item>
      <title>kubernetes管理的容器命名规则解析</title>
      <link>https://jimmysong.io/posts/kubernetes-container-naming-rule/</link>
      <pubDate>Thu, 15 Jun 2017 21:52:38 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/kubernetes-container-naming-rule/</guid>
      <description>本文将归档到kubernetes-handbook的【运维管理-监控】章节中，最终版本以kubernetes-handbook中为准。 当我们</description>
    </item>
    
    <item>
      <title>Kubernetes配置最佳实践</title>
      <link>https://jimmysong.io/posts/configuration-best-practice/</link>
      <pubDate>Wed, 14 Jun 2017 20:03:09 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/configuration-best-practice/</guid>
      <description>（题图：青岛 May 26,2017） 前言 本文档旨在汇总和强调用户指南、快速开始文档和示例中的最佳实践。该文档会很很活跃并持续更新中。如果你觉得很有</description>
    </item>
    
    <item>
      <title>Cloud Native Go - 基于Go和React的web云服务构建指南</title>
      <link>https://jimmysong.io/posts/cloud-native-go/</link>
      <pubDate>Tue, 06 Jun 2017 22:23:54 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/cloud-native-go/</guid>
      <description>(题图：北京植物园桃花 Mar 26,2016) Kevin Hoffman和Dan Nemeth著的《Cloud Native Go - 基于Go和React的web云原生应用构建指南》将由电子</description>
    </item>
    
    <item>
      <title>微服务管理框架Istio简介</title>
      <link>https://jimmysong.io/posts/istio-overview/</link>
      <pubDate>Fri, 02 Jun 2017 11:27:57 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/istio-overview/</guid>
      <description>（题图：威海朱口 May 29,2017） 前言 本文已上传到kubernetes-handbook中的第五章微服务章节，本文仅作归档，更新以kuber</description>
    </item>
    
    <item>
      <title>微服务管理框架istio安装笔记</title>
      <link>https://jimmysong.io/posts/istio-installation/</link>
      <pubDate>Thu, 01 Jun 2017 20:18:57 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/istio-installation/</guid>
      <description>（题图：威海东部海湾 May 28,2017） 前言 本文已上传到kubernetes-handbook中的第五章微服务章节，本文仅作归档，更新以kub</description>
    </item>
    
    <item>
      <title>使用filebeat收集kubernetes中的应用日志</title>
      <link>https://jimmysong.io/posts/kubernetes-filebeat/</link>
      <pubDate>Wed, 17 May 2017 17:24:52 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/kubernetes-filebeat/</guid>
      <description>（题图：民生现代美术馆 May 14,2017） 前言 本文已同步更新到Github仓库kubernetes-handbook中。 昨天写了篇文章使用Lo</description>
    </item>
    
    <item>
      <title>使用Logstash收集Kubernetes的应用日志</title>
      <link>https://jimmysong.io/posts/kubernetes-logstash/</link>
      <pubDate>Tue, 16 May 2017 17:46:15 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/kubernetes-logstash/</guid>
      <description>（题图：798艺术区 May 14,2017） 前言 本文同步更新到Github仓库kubernetes-handbook中。 很多企业内部都有自己的El</description>
    </item>
    
    <item>
      <title>Kubernete概念解析之Deployment</title>
      <link>https://jimmysong.io/posts/kubernetes-concept-deployment/</link>
      <pubDate>Sat, 13 May 2017 00:46:37 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/kubernetes-concept-deployment/</guid>
      <description>（题图：京广桥@北京国贸 Apr 30,2017） 前言 本文同步更新到Github仓库kubernetes-handbook中。 本文翻译自kubern</description>
    </item>
    
    <item>
      <title>Kubernetes中的Rolling Update服务滚动升级</title>
      <link>https://jimmysong.io/posts/kubernetes-service-rolling-update/</link>
      <pubDate>Wed, 10 May 2017 17:14:20 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/kubernetes-service-rolling-update/</guid>
      <description>（题图：后海夜色 Apr 30,2017） 前言 本文已同步到gitbook kubernetes-handbook的第8章第1节。 本文说明在Kubern</description>
    </item>
    
    <item>
      <title>Kubernetes的边缘节点配置</title>
      <link>https://jimmysong.io/posts/kubernetes-edge-node-configuration/</link>
      <pubDate>Tue, 09 May 2017 12:59:19 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/kubernetes-edge-node-configuration/</guid>
      <description>（题图：南屏晚钟@圆明园 May 6,2017） 前言 为了配置kubernetes中的traefik ingress的高可用，对于kubernetes集</description>
    </item>
    
    <item>
      <title>在kubernetes中使用glusterfs做持久化存储</title>
      <link>https://jimmysong.io/posts/kubernetes-with-glusterfs/</link>
      <pubDate>Thu, 04 May 2017 20:06:18 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/kubernetes-with-glusterfs/</guid>
      <description>（题图：无题@北京奥林匹克森林公园 May 1,2017） 前言 本文章已同步到kubernetes-handbook 7.1章节。 Kubernetes集</description>
    </item>
    
    <item>
      <title>Kubernetes网络和集群性能测试</title>
      <link>https://jimmysong.io/posts/kubernetes-performance-test/</link>
      <pubDate>Tue, 25 Apr 2017 22:14:49 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/kubernetes-performance-test/</guid>
      <description>（题图：无题@安贞门 Jun 18,2016） 前言 该测试是为了测试在不同的场景下，访问kubernetes的延迟以及kubernetes的性能。进行</description>
    </item>
    
    <item>
      <title>运用kubernetes进行分布式负载测试</title>
      <link>https://jimmysong.io/posts/distributed-load-testing-using-kubernetes/</link>
      <pubDate>Mon, 24 Apr 2017 21:32:52 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/distributed-load-testing-using-kubernetes/</guid>
      <description>（题图：Kubrick Book Store Mar 25,2016） 前言 本示例来自 GitHub - distributed-load-testing-using-kubernet</description>
    </item>
    
    <item>
      <title>Kubernetes中的IP和服务发现体系</title>
      <link>https://jimmysong.io/posts/ip-and-service-discovry-in-kubernetes/</link>
      <pubDate>Mon, 24 Apr 2017 16:11:16 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/ip-and-service-discovry-in-kubernetes/</guid>
      <description>（题图：路边的野花@朝阳公园 Nov 8,2015） Cluster IP 即Service的IP，通常在集群内部使用Service Name来访问服务，用户不需要知道该</description>
    </item>
    
    <item>
      <title>Kubernetes中的RBAC支持</title>
      <link>https://jimmysong.io/posts/kubernetes-rbac-support/</link>
      <pubDate>Fri, 21 Apr 2017 19:53:18 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/kubernetes-rbac-support/</guid>
      <description>（题图：无题 Apr 2,2016） 在Kubernetes1.6版本中新增角色访问控制机制（Role-Based Access，RBAC）让集群管理员</description>
    </item>
    
    <item>
      <title>Kubernetes traefik ingress安装试用</title>
      <link>https://jimmysong.io/posts/traefik-ingress-installation/</link>
      <pubDate>Thu, 20 Apr 2017 22:38:40 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/traefik-ingress-installation/</guid>
      <description>（题图：🐟@鱼缸 Sep 15,2016） 前言 昨天翻了下Ingress解析，然后安装试用了下traefik，过程已同步到kubernetes-han</description>
    </item>
    
    <item>
      <title>Kubernetes ingress解析</title>
      <link>https://jimmysong.io/posts/kubernetes-ingress-resource/</link>
      <pubDate>Wed, 19 Apr 2017 21:05:47 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/kubernetes-ingress-resource/</guid>
      <description>（题图：朝阳门银河SOHO Jan 31,2016） 前言 这是kubernete官方文档中Ingress Resource的翻译，因为最近工作中用到，文</description>
    </item>
    
    <item>
      <title>Kubernetes Handbook发起</title>
      <link>https://jimmysong.io/posts/kubernetes-handbook-startup/</link>
      <pubDate>Fri, 14 Apr 2017 19:33:27 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/kubernetes-handbook-startup/</guid>
      <description>（题图：地坛公园 Sep 27,2015） Kubernetes 是 Google 基于 Borg 开源的容器编排调度引擎，作为 CNCF（Cloud Native Computing Foundation）最重要的组件之一，它</description>
    </item>
    
    <item>
      <title>Kubernetes1.6集群部署完全指南——二进制文件部署开启TLS基于CentOS7发布</title>
      <link>https://jimmysong.io/posts/kubernetes-installation-document/</link>
      <pubDate>Thu, 13 Apr 2017 14:00:04 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/kubernetes-installation-document/</guid>
      <description>（题图：清晨@首都机场 Aug 13,2016） 这可能是目前为止最详细的kubernetes安装文档了。 经过几天的安装、调试、整理，今天该文档终于发</description>
    </item>
    
    <item>
      <title>在开启TLS的Kubernetes1.6集群上安装EFK</title>
      <link>https://jimmysong.io/posts/kubernetes-efk-installation-with-tls/</link>
      <pubDate>Thu, 13 Apr 2017 12:28:10 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/kubernetes-efk-installation-with-tls/</guid>
      <description>（题图：簋街 Jun 17,2016） 前言 这是和我一步步部署kubernetes集群项目(fork自opsnull)中的一篇文章，下文是结合我之前部</description>
    </item>
    
    <item>
      <title>在开启TLS的Kubernetes1.6集群上安装heapster</title>
      <link>https://jimmysong.io/posts/kubernetes-heapster-installation-with-tls/</link>
      <pubDate>Wed, 12 Apr 2017 20:20:19 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/kubernetes-heapster-installation-with-tls/</guid>
      <description>（题图：大喵 Aug 8,2016） 前言 这是和我一步步部署kubernetes集群项目(fork自opsnull)中的一篇文章，下文是结合我之前部署</description>
    </item>
    
    <item>
      <title>在开启TLS的Kubernetes1.6集群上安装dashboard</title>
      <link>https://jimmysong.io/posts/kubernetes-dashboard-installation-with-tls/</link>
      <pubDate>Wed, 12 Apr 2017 15:53:39 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/kubernetes-dashboard-installation-with-tls/</guid>
      <description>（题图：东直门桥 Aug 20,2016） 前言 这是和我一步步部署kubernetes集群项目(fork自opsnull)中的一篇文章，下文是结合我之</description>
    </item>
    
    <item>
      <title>Kubernetes安装之kubedns配置</title>
      <link>https://jimmysong.io/posts/kubernetes-kubedns-installation/</link>
      <pubDate>Wed, 12 Apr 2017 13:04:45 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/kubernetes-kubedns-installation/</guid>
      <description>（题图：雨过天晴@北京定福庄 Aug 27,2016） 前言 这是和我一步步部署kubernetes集群项目(fork自opsnull)中的一篇文章，下</description>
    </item>
    
    <item>
      <title>Kubernetes node节点安装</title>
      <link>https://jimmysong.io/posts/kubernetes-node-installation/</link>
      <pubDate>Tue, 11 Apr 2017 22:20:31 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/kubernetes-node-installation/</guid>
      <description>（题图：太阳宫桥@北京东北三环 Dec 11,2016） 前言 这是和我一步步部署kubernetes集群项目(fork自opsnull)中的一篇文章，</description>
    </item>
    
    <item>
      <title>Kubernetes集群master节点安装</title>
      <link>https://jimmysong.io/posts/kubernetes-ha-master-installation/</link>
      <pubDate>Tue, 11 Apr 2017 19:55:56 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/kubernetes-ha-master-installation/</guid>
      <description>（题图：鬼见愁@北京西山 Sep 14,2015） 前言 这是和我一步步部署kubernetes集群项目((fork自opsnull))中的一篇文章，下</description>
    </item>
    
    <item>
      <title>Kubernetes安装之etcd高可用配置</title>
      <link>https://jimmysong.io/posts/kubernetes-etcd-ha-config/</link>
      <pubDate>Tue, 11 Apr 2017 15:21:39 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/kubernetes-etcd-ha-config/</guid>
      <description>（题图：北京夜景@西山） 前言 这是和我一步步部署kubernetes集群项目((fork自opsnull))中的一篇文章，下文是结合我之前部署</description>
    </item>
    
    <item>
      <title>Kubernetes安装之创建kubeconfig文件</title>
      <link>https://jimmysong.io/posts/kubernetes-create-kubeconfig/</link>
      <pubDate>Tue, 11 Apr 2017 14:34:54 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/kubernetes-create-kubeconfig/</guid>
      <description>(题图：北海公园 May 8,2016) 前言 这是和我一步步部署kubernetes集群项目((fork自opsnull))中的一篇文章，下文是结合我之前部署ku</description>
    </item>
    
    <item>
      <title>开源微服务管理平台fabric8简介</title>
      <link>https://jimmysong.io/posts/fabric8-introduction/</link>
      <pubDate>Mon, 10 Apr 2017 21:39:00 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/fabric8-introduction/</guid>
      <description>前言 无意中发现Fabric8这个对于Java友好的开源微服务管理平台。 其实这在这里发现的Achieving CI/CD with Kubernetes（by Ramit Surana,on</description>
    </item>
    
    <item>
      <title>Kubernetes安装之证书验证</title>
      <link>https://jimmysong.io/posts/kubernetes-tls-certificate/</link>
      <pubDate>Mon, 10 Apr 2017 17:28:41 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/kubernetes-tls-certificate/</guid>
      <description>（题图：铜牛@颐和园 Aug 25,2014） 前言 昨晚（Apr 9,2017）金山软件的opsnull发布了一个开源项目和我一步步部署kubernet</description>
    </item>
    
    <item>
      <title>云计算技术架构与实践（第二版）读后感</title>
      <link>https://jimmysong.io/posts/cloud-computing-architecture-practice/</link>
      <pubDate>Sat, 08 Apr 2017 12:29:36 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/cloud-computing-architecture-practice/</guid>
      <description>（题图：长江三峡大坝@湖北宜昌 Apr 6,2015） 前言 最近（2017年3月）友人推荐了一本书，是华为的工程师写的《云计算架构与实践第二版》，正好</description>
    </item>
    
    <item>
      <title>使用Fluentd和ElasticSearch收集Kubernetes集群日志</title>
      <link>https://jimmysong.io/posts/kubernetes-fluentd-elasticsearch-installation/</link>
      <pubDate>Fri, 07 Apr 2017 20:13:24 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/kubernetes-fluentd-elasticsearch-installation/</guid>
      <description>（题图：码头@古北水镇 Apr 30,2016） 前言 在安装好了Kubernetes集群、配置好了flannel网络、安装了Kubernetes Das</description>
    </item>
    
    <item>
      <title>Kubernetes的ConfigMap解析</title>
      <link>https://jimmysong.io/posts/kubernetes-configmap-introduction/</link>
      <pubDate>Thu, 06 Apr 2017 21:24:20 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/kubernetes-configmap-introduction/</guid>
      <description>（题图：龙形灯笼@古北水镇 Apr 30,2016） 前言 为什么要翻译这篇文章，是因为我在使用Fluentd和ElasticSearch收集Kuber</description>
    </item>
    
    <item>
      <title>TensorFlow深度学习手写数字识别初体验</title>
      <link>https://jimmysong.io/posts/tensorflow-and-deep-learning-without-a-phd/</link>
      <pubDate>Wed, 05 Apr 2017 21:52:01 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/tensorflow-and-deep-learning-without-a-phd/</guid>
      <description>（题图：禾雀 @北京动物园 Apr 3,2017） 前言 TensorFlow学习曲线是陡峭的，不是所有的IT从业人员都很容易参与的，你需要有一定的数学专</description>
    </item>
    
    <item>
      <title>Kubernetes heapster监控插件安装文档</title>
      <link>https://jimmysong.io/posts/kubernetes-heapster-installation/</link>
      <pubDate>Wed, 05 Apr 2017 18:41:19 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/kubernetes-heapster-installation/</guid>
      <description>（题图：嗑猫薄荷的白化孟加拉虎@北京动物园 Apr 3,2017） 前言 前面几篇文章中记录了我们安装好了Kubernetes集群、配置好了flanne</description>
    </item>
    
    <item>
      <title>Kubernetes Dashboard/Web UI安装全记录</title>
      <link>https://jimmysong.io/posts/kubernetes-dashboard-installation/</link>
      <pubDate>Wed, 05 Apr 2017 14:28:51 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/kubernetes-dashboard-installation/</guid>
      <description>（题图：晒太阳的袋鼠@北京动物园 Apr 3,2017） 前言 前几天在CentOS7.2上安装Kubernetes1.6和安装好flannel网络配置</description>
    </item>
    
    <item>
      <title>容器技术在大数据场景下的应用——Yarn on Docker</title>
      <link>https://jimmysong.io/posts/yarn-on-docker/</link>
      <pubDate>Tue, 04 Apr 2017 00:19:04 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/yarn-on-docker/</guid>
      <description>作者：宋净超 TalkingData云计算及大数据工程师 前言 我已就该话题已在2016年上海Qcon上发表过演讲，点此观看。 另外InfoQ网站上</description>
    </item>
    
    <item>
      <title>两款图片处理工具——Google Guetzli和基于AI的Deep Photo Style Transfer</title>
      <link>https://jimmysong.io/posts/picture-process/</link>
      <pubDate>Sun, 02 Apr 2017 20:27:00 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/picture-process/</guid>
      <description>前言 如果你看过美剧「硅谷」会记得剧中主角们所在的创业公司PiedPipper，他们就是靠自己发明的视频压缩算法来跟大公司Hooli竞争的，这</description>
    </item>
    
    <item>
      <title>Kubernetes基于flannel的网络配置</title>
      <link>https://jimmysong.io/posts/kubernetes-network-config/</link>
      <pubDate>Fri, 31 Mar 2017 11:05:18 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/kubernetes-network-config/</guid>
      <description>（题图：西安鼓楼 Oct 4,2014） 书接上文在CentOS中安装Kubernetes详细指南，这是一个系列文章，作为学习Kubernetes的心</description>
    </item>
    
    <item>
      <title>TensorFlow实战（才云郑泽宇著）读书笔记——第三章TensorFlow入门</title>
      <link>https://jimmysong.io/posts/tensorflow-practice-03/</link>
      <pubDate>Thu, 30 Mar 2017 21:34:33 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/tensorflow-practice-03/</guid>
      <description>（题图：扬州东关 May 24,2015） 这是我阅读才云科技郑泽宇的《TensorFlow实战Google深度学习框架》的读书笔记系列文章，按照文章</description>
    </item>
    
    <item>
      <title>在CentOS上安装kubernetes详细指南</title>
      <link>https://jimmysong.io/posts/kubernetes-installation-on-centos/</link>
      <pubDate>Thu, 30 Mar 2017 20:44:20 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/kubernetes-installation-on-centos/</guid>
      <description>（题图：北京圆明园 Aug 25,2014） 作者：Jimmy Song，Peter Ma，2017年3月30日 最近决定从Docker Swarm Mode投入到Ku</description>
    </item>
    
    <item>
      <title>Go语言中的并发编程总结</title>
      <link>https://jimmysong.io/posts/golang-concurrency-summary/</link>
      <pubDate>Fri, 24 Mar 2017 08:36:29 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/golang-concurrency-summary/</guid>
      <description>Go语言并发编程总结 Golang :不要通过共享内存来通信，而应该通过通信来共享内存。这句风靡在Go社区的话,说的就是 goroutine中的 channe</description>
    </item>
    
    <item>
      <title>Pivotal Cloud foundry快速开始指南</title>
      <link>https://jimmysong.io/posts/cloud-foundry-tryout/</link>
      <pubDate>Thu, 23 Mar 2017 22:54:18 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/cloud-foundry-tryout/</guid>
      <description>（题图：黄山日出后的云海 Oct 3,2013） 前言 最近研究了下Pivotal的Cloud foundry，CF本身是一款开源软件，很多PAAS厂商都</description>
    </item>
    
    <item>
      <title>TensorFlow实战（才云郑泽宇著）读书笔记——第二章TensorFlow环境搭建</title>
      <link>https://jimmysong.io/posts/tensorflow-practice-02/</link>
      <pubDate>Thu, 23 Mar 2017 19:34:33 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/tensorflow-practice-02/</guid>
      <description>（题图：广州海珠桥 Aug 10,2014） 这是我阅读才云科技郑泽宇的《TensorFlow实战Google深度学习框架》的读书笔记系列文章，按照文</description>
    </item>
    
    <item>
      <title>容器的应用场景</title>
      <link>https://jimmysong.io/posts/container-applications-scenarios/</link>
      <pubDate>Thu, 23 Mar 2017 15:26:11 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/container-applications-scenarios/</guid>
      <description>（题图：深圳大梅沙 Aug 1,2014） 如果你对容器到底有什么用存在疑惑的话，推荐你看下我今天碰到的一篇阿里云的容器服务-产品简介-应用场景的文章</description>
    </item>
    
    <item>
      <title>TensorFlow实战（才云郑泽宇著）读书笔记——第一章深度学习简介</title>
      <link>https://jimmysong.io/posts/tensorflow-practice-01/</link>
      <pubDate>Mon, 20 Mar 2017 22:04:33 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/tensorflow-practice-01/</guid>
      <description>（题图：TensofFlow实战图书封面） 🙏电子工业出版社编辑赠书，能够这么快的拿到这本书，也🙏才云科技的郑泽宇大哥耐心的写了这本书，能够让</description>
    </item>
    
    <item>
      <title>Docker源码分析第一篇——代码结构</title>
      <link>https://jimmysong.io/posts/docker-source-code-analysis-code-structure/</link>
      <pubDate>Sun, 19 Mar 2017 23:00:29 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/docker-source-code-analysis-code-structure/</guid>
      <description>(题图：北京八达岭长城 Oct 1,2015) 前言 之前陆陆续续看过一点docker的源码，都未成体系，最近在研究Docker-17.03-CE，趁此机会研究下d</description>
    </item>
    
    <item>
      <title>零基础使用Hugo和GitHub Pages创建自己的博客</title>
      <link>https://jimmysong.io/posts/building-github-pages-with-hugo/</link>
      <pubDate>Fri, 17 Mar 2017 22:08:25 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/building-github-pages-with-hugo/</guid>
      <description>（题图：🦅 北京动物园 Oct 5,2015） 亲，你还在为虚拟主机、域名、空间而发愁吗？你想拥有自己的网站吗？你想拥有一个分享知识、留住感动，为开源事</description>
    </item>
    
    <item>
      <title>Contiv Ultimate-Docker17.03CE下思科docker网络插件contiv趟坑终极版</title>
      <link>https://jimmysong.io/posts/contiv-ultimate/</link>
      <pubDate>Fri, 17 Mar 2017 17:52:37 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/contiv-ultimate/</guid>
      <description>（题图：广州石牌桥 Aug 10,2014） 前几天写的几篇关于Contiv的文章已经把引入坑了😂 今天这篇文章将带领大家用正确的姿势编译和打包一个co</description>
    </item>
    
    <item>
      <title>Docker17.03-CE插件开发案例</title>
      <link>https://jimmysong.io/posts/docker-plugin-develop/</link>
      <pubDate>Wed, 15 Mar 2017 13:57:26 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/docker-plugin-develop/</guid>
      <description>（题图：杭州吴山步道旁的墙壁 Oct 16,2016） 当你看到这篇文章时，如果你也正在进行docker1.13+版本下的plugin开发，恭喜你也入</description>
    </item>
    
    <item>
      <title>Docker 17.03-CE create plugin源码解析</title>
      <link>https://jimmysong.io/posts/docker-create-plugin/</link>
      <pubDate>Wed, 15 Mar 2017 12:09:26 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/docker-create-plugin/</guid>
      <description>（题图：故宫 Apr 3,2016） 继续上一篇Docker17.03-CE插件开发的🌰，今天来看下docker create plugin的源码。 cli/command/plugin/create.go Docker命</description>
    </item>
    
    <item>
      <title>微服务设计读书笔记</title>
      <link>https://jimmysong.io/posts/microservice-reading-notes/</link>
      <pubDate>Sat, 11 Mar 2017 15:45:27 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/microservice-reading-notes/</guid>
      <description>(题图：青海湖畔 Jun 25,2016) 最近在看《微服务设计（Sam Newman著）》这本书，下载本书PDF(扫描版，高清49.17M)。作者是ThoughtW</description>
    </item>
    
    <item>
      <title>weibo opendcp</title>
      <link>https://jimmysong.io/posts/weibo-opendcp/</link>
      <pubDate>Fri, 10 Mar 2017 23:54:06 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/weibo-opendcp/</guid>
      <description>（题图：青海湖 Jun 25,2016 ） 前几天看到微博开源的docker管理平台opendcp，今天抽空研究了一下。 OpenDCP是一个基于Docker的云资源</description>
    </item>
    
    <item>
      <title>Docker v.s Kubernetes part2</title>
      <link>https://jimmysong.io/posts/docker-vs-kubernetes-part2/</link>
      <pubDate>Fri, 10 Mar 2017 22:06:32 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/docker-vs-kubernetes-part2/</guid>
      <description>（题图：河北承德兴隆县雾灵山京郊最佳星空拍摄点 July 9,2016) 本文是Docker v.s Kubernetes第二篇，续接上文Docker v.s Kuberntes Part1。 Kub</description>
    </item>
    
    <item>
      <title>Docker v.s Kubernetes part1</title>
      <link>https://jimmysong.io/posts/docker-vs-kubernetes-part1/</link>
      <pubDate>Fri, 10 Mar 2017 21:09:47 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/docker-vs-kubernetes-part1/</guid>
      <description>（题图：杭州西湖 Oct 16,2016） 前言 这一系列文章是对比kubernetes 和docker两者之间的差异，鉴于我之前从docker1.10.</description>
    </item>
    
    <item>
      <title>Contiv入坑指南-v2plugin</title>
      <link>https://jimmysong.io/posts/contiv-v2plugin/</link>
      <pubDate>Fri, 10 Mar 2017 11:51:09 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/contiv-v2plugin/</guid>
      <description>(题图：上海交通大学 Oct 22,2016) 继续趟昨天挖的坑。 昨天的issue-776已经得到@gkvijay的回复，原来是因为没有安装contiv/v2plu</description>
    </item>
    
    <item>
      <title>Contiv入坑指南-试用全记录</title>
      <link>https://jimmysong.io/posts/contiv-tryout/</link>
      <pubDate>Thu, 09 Mar 2017 14:23:04 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/contiv-tryout/</guid>
      <description>(题图：山东荣成滨海风力发电场 Jan 31,2017） 关于contiv的介绍请看我的上一篇文章Contiv Intro。 开发环境使用Vagrant搭</description>
    </item>
    
    <item>
      <title>思科开源docker网络插件Contiv简介</title>
      <link>https://jimmysong.io/posts/contiv-guide/</link>
      <pubDate>Thu, 09 Mar 2017 11:28:34 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/contiv-guide/</guid>
      <description>(题图：北京蓝色港湾夜景 Feb 11,2017 元宵节) Contiv是思科开发的docker网络插件，从2015年就开源了，业界通常拿它和Calico比较。貌似</description>
    </item>
    
    <item>
      <title>开源镜像定义工具Packer简介</title>
      <link>https://jimmysong.io/posts/packer-intro/</link>
      <pubDate>Thu, 09 Mar 2017 10:58:42 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/packer-intro/</guid>
      <description>昨天研究了下Vagrant，感觉它的虚拟机ruby格式定义很麻烦，经人指点还有一个叫做packer的东西，也是Hashicorp这家公司出品</description>
    </item>
    
    <item>
      <title>Vagrant介绍-从使用到放弃完全指南</title>
      <link>https://jimmysong.io/posts/vagrant-intro/</link>
      <pubDate>Wed, 08 Mar 2017 20:40:08 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/vagrant-intro/</guid>
      <description>（题图：北京地铁13号线光熙家园夜景 Mar 5,2017） 起源 久闻Vagrant大名，之前经常看到有开源项目使用它作为分布式开发的环境配置。 因为今</description>
    </item>
    
    <item>
      <title>Docker技术选型</title>
      <link>https://jimmysong.io/posts/docker-tech-selection/</link>
      <pubDate>Wed, 08 Mar 2017 10:37:01 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/docker-tech-selection/</guid>
      <description>回顾历史 多少次我回过头看看走过的路，你还在小村旁。 去年基于docker1.11对Hadoop yarn进行了docker化改造，详情请看大数据</description>
    </item>
    
    <item>
      <title>Docker源码编译和开发环境搭建</title>
      <link>https://jimmysong.io/posts/docker-dev-env/</link>
      <pubDate>Mon, 06 Mar 2017 17:03:19 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/docker-dev-env/</guid>
      <description>看了下网上其他人写的docker开发环境搭建，要么是在ubuntu下搭建，要么就是使用官方说明的build docker-dev镜像的方式一步</description>
    </item>
    
    <item>
      <title>12因素应用简介</title>
      <link>https://jimmysong.io/posts/12-factor-app/</link>
      <pubDate>Mon, 27 Feb 2017 22:32:40 +0800</pubDate>
      <author>rootsongjc@gmail.com (Jimmy Song)</author>
      <guid>https://jimmysong.io/posts/12-factor-app/</guid>
      <description>如今，软件通常会作为一种服务来交付，它们被称为网络应用程序，或软件即服务（SaaS）。12-Factor 为构建如下的 SaaS 应用提供了方法论： 使用</description>
    </item>
    
  </channel>
</rss>