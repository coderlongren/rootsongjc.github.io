<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hadoop on Jimmy Song&#39;s Blog</title>
    <link>http://rootsongjc.github.io/tags/hadoop/</link>
    <description>Recent content in Hadoop on Jimmy Song&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 21 Aug 2017 16:56:45 +0800</lastBuildDate>
    
	<atom:link href="http://rootsongjc.github.io/tags/hadoop/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>迁移传统应用到Kubernetes步骤详解——以Hadoop YARN为例</title>
      <link>http://rootsongjc.github.io/blogs/migrating-hadoop-yarn-to-kubernetes/</link>
      <pubDate>Mon, 21 Aug 2017 16:56:45 +0800</pubDate>
      
      <guid>http://rootsongjc.github.io/blogs/migrating-hadoop-yarn-to-kubernetes/</guid>
      <description>前言 本文已归档到 kubernetes-handbook 【第三章用户指南】的【在Kubernetes中开发部署应用】小节中，一切更新以 GitHub 为准。
本文档不是说明如何在 kubernetes 中开发和部署应用程序，如果您想要直接开发应用程序在 kubernetes 中运行可以参考 适用于kubernetes的应用开发部署流程。
本文旨在说明如何将已有的应用程序尤其是传统的分布式应用程序迁移到 kubernetes 中。如果该类应用程序符合云原生应用规范（如12因素法则）的话，那么迁移会比较顺利，否则会遇到一些麻烦甚至是阻碍。具体请参考 迁移至云原生应用架构。
接下来我们将以 Spark on YARN with kubernetes 为例来说明，该例子足够复杂也很有典型性，了解了这个例子可以帮助大家将自己的应用迁移到 kubernetes 集群上去，代码和配置文件可以在 这里 找到（本文中加入 Spark 的配置，代码中并没有包含，读者可以自己配置）。
下图为整个架构的示意图，代码和详细配置文件请参考 kube-yarn（不包含 ingress、spark 配置），所有的进程管理和容器扩容直接使用 Makefile，如何使用请参考该项目文档。

注意： 该例子仅用来说明具体的步骤划分和复杂性，在生产环境应用还有待验证，请谨慎使用。
术语 对于为曾接触过 kubernetes 或对云平台的技术细节不太了解的人来说，如何将应用迁移到 kubernetes 中可能是个头疼的问题，在行动之前有必要先了解整个过程中需要用到哪些概念和术语，有助于大家在行动中达成共识。
过程中可能用到的概念和术语初步整理如下：

为了讲解整改过程和具体细节，我们所有操作都是通过命令手动完成，不使用自动化工具。当您充分了解到其中的细节后可以通过自动化工具来优化该过程，以使其更加自动和高效，同时减少因为人为操作失误导致的迁移失败。
步骤详解 
整个迁移过程分为如下几个步骤：
 将原有应用拆解为服务  我们不是一上来就开始做镜像，写配置，而是应该先梳理下要迁移的应用中有哪些可以作为服务运行，哪些是变的，哪些是不变的部分。
服务划分的原则是最小可变原则，这个同样适用于镜像制作，将服务中不变的部分编译到同一个镜像中。
对于像 Spark on YARN 这样复杂的应用，可以将其划分为三大类服务：
 ResourceManager NodeManager Spark client   制作镜像  根据拆解出来的服务，我们需要制作两个镜像：</description>
    </item>
    
  </channel>
</rss>