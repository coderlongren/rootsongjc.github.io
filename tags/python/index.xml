<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Jimmy Song&#39;s Blog</title>
    <link>http://jimmysong.io/tags/python/</link>
    <description>Recent content in Python on Jimmy Song&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 15 Aug 2017 22:58:37 +0800</lastBuildDate>
    
	<atom:link href="http://jimmysong.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Cloud Native Python—使用Python和React构建云原生应用</title>
      <link>http://jimmysong.io/talks/cloud-native-python/</link>
      <pubDate>Tue, 15 Aug 2017 22:58:37 +0800</pubDate>
      
      <guid>http://jimmysong.io/talks/cloud-native-python/</guid>
      <description>继 Cloud Native Go 之后又一本关于 Cloud Native 的力作已经登上了我的写作日程，这次是基于 Python 构建微服务和云原生 Web 应用程序，书名叫作 Cloud Native Python。
下面是它的英文原版书（感谢电子工业出版社）跟它已出版的好兄弟 Cloud Native Go 在一起的合影。
这本书跟 Cloud Native Go 的内容由很大部分的重合，目录结构也基本一致，所用的技术栈也很类似，不过内容更详实，图片和步骤介绍更多一些，跟我看的另一本由印度人写的 Kubernetes Management Design Patterns: With Docker, CoreOS Linux, and Other Platforms 的风格很像。
Cloud Native Python 介绍 随着当今商业的迅速发展，企业为了支撑自身的迅速扩张，仅仅通过自有的基础设施是远远不够的。因此，他们一直在追求利用云的弹性来构建支持高度可扩展应用程序的平台。
这本书能够帮助您一站式的了解使用Python构建云原生应用架构的所有信息。本书中我们首先向您介绍云原生应用架构和他们能够帮助您解决哪些问题。然后您将了解到如何使用REST API和Python构建微服务，通过事件驱动的方式构建Web层。接下来，您将了解到如何与数据服务进行交互，并使用React构建Web视图，之后我们将详细介绍应用程序的安全性和性能。然后，您还将了解到如何Docker容器化您的服务。最后，您将学习如何在AWS和Azure平台上部署您的应用程序。在您部署了应用程序后，我们将围绕关于应用程序故障排查的一系列概念和技术来结束这本书。
本书中涵盖哪些内容 第1章 介绍云原生应用架构和微服务，讨论云原生架构的基本概念和构建应用程序开发环境。
第2章 使用Python构建微服务，构建自己的微服务知识体系并根据您的用例进行扩展。
第3章 使用Python构建Web应用程序，构建一个初始的Web应用程序并与微服务集成。
第4章 与数据服务交互，教您如何将应用程序迁移到不同的数据库服务。
第5章 使用React构建Web视图。
第6章 使用Flux创建可扩展UI，帮助您理解如何使用Flux创建可扩展的应用程序。
第7章 事件溯源和CQRS，讨论如何以事件形式存储合约（transaction）。
第8章 保护Web应用程序，让您的应用程序免于受到外部威胁。
第9章 持续交付，应用程序频繁发布的相关知识。
第10章 Docker容器化您的服务，讨论容器服务和在Docker中运行应用程序。
第11章 将应用程序部署到AWS平台上，教您如何在AWS上构建基础设施并建立应用程序的生产环境。
第12章 将应用程序部署到Azure平台上，讨论如何在Azure上构建基础设施并建立应用程序的生产环境。</description>
    </item>
    
  </channel>
</rss>