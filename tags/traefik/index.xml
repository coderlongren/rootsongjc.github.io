<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Traefik on Jimmy Song&#39;s Blog</title>
    <link>http://rootsongjc.github.io/tags/traefik/index.xml</link>
    <description>Recent content in Traefik on Jimmy Song&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://rootsongjc.github.io/tags/traefik/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Kubernetes traefik ingress安装试用</title>
      <link>http://rootsongjc.github.io/blogs/traefik-ingress-installation/</link>
      <pubDate>Thu, 20 Apr 2017 22:38:40 +0800</pubDate>
      
      <guid>http://rootsongjc.github.io/blogs/traefik-ingress-installation/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;http://olz1di9xf.bkt.clouddn.com/20160915046.jpg&#34; alt=&#34;fish&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;（题图：🐟@鱼缸 Sep 15,2016）&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;

&lt;p&gt;昨天翻了下&lt;a href=&#34;http://rootsongjc.github.io/blogs/kubernetes-ingress-resource/&#34;&gt;Ingress解析&lt;/a&gt;，然后安装试用了下&lt;a href=&#34;https://traefik.io&#34;&gt;traefik&lt;/a&gt;，过程已同步到&lt;a href=&#34;https://www.gitbook.com/book/rootsongjc/kubernetes-handbook&#34;&gt;kubernetes-handbook&lt;/a&gt;上，Github地址&lt;a href=&#34;https://github.com/rootsongjc/kubernetes-handbook&#34;&gt;https://github.com/rootsongjc/kubernetes-handbook&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;ingress简介&#34;&gt;Ingress简介&lt;/h2&gt;

&lt;p&gt;如果你还不了解，ingress是什么，可以先看下我翻译的Kubernetes官网上ingress的介绍&lt;a href=&#34;http://rootsongjc.github.io/blogs/kubernetes-ingress-resource/&#34;&gt;Kubernetes Ingress解析&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;理解Ingress&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;简单的说，ingress就是从kubernetes集群外访问集群的入口，将用户的URL请求转发到不同的service上。Ingress相当于nginx、apache等负载均衡方向代理服务器，其中还包括规则定义，即URL的路由信息，路由信息得的刷新由&lt;a href=&#34;https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-controllers&#34;&gt;Ingress controller&lt;/a&gt;来提供。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;理解Ingress Controller&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ingress Controller 实质上可以理解为是个监视器，Ingress Controller 通过不断地跟 kubernetes API 打交道，实时的感知后端 service、pod 等变化，比如新增和减少 pod，service 增加与减少等；当得到这些变化信息后，Ingress Controller 再结合下文的 Ingress 生成配置，然后更新反向代理负载均衡器，并刷新其配置，达到服务发现的作用。&lt;/p&gt;

&lt;h2 id=&#34;部署traefik&#34;&gt;部署Traefik&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;介绍traefik&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://traefik.io/&#34;&gt;Traefik&lt;/a&gt;是一款开源的反向代理与负载均衡工具。它最大的优点是能够与常见的微服务系统直接整合，可以实现自动化动态配置。目前支持Docker, Swarm, Mesos/Marathon, Mesos, Kubernetes, Consul, Etcd, Zookeeper, BoltDB, Rest API等等后端模型。&lt;/p&gt;

&lt;p&gt;以下配置文件可以在&lt;a href=&#34;https://github.com/rootsongjc/kubernetes-handbook&#34;&gt;kubernetes-handbook&lt;/a&gt;GitHub仓库中的&lt;a href=&#34;manifests/traefik-ingress/&#34;&gt;manifests/traefik-ingress/&lt;/a&gt;目录下找到。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;创建ingress-rbac.yaml&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;将用于service account验证。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-Yaml&#34;&gt;apiVersion: v1
kind: ServiceAccount
metadata:
  name: ingress
  namespace: kube-system

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: ingress
subjects:
  - kind: ServiceAccount
    name: ingress
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;创建名为&lt;code&gt;traefik-ingress&lt;/code&gt;的ingress&lt;/strong&gt;，文件名traefik.yaml&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: traefik-ingress
spec:
  rules:
  - host: traefik.nginx.io
    http:
      paths:
      - path: /
        backend:
          serviceName: my-nginx
          servicePort: 80
  - host: traefik.frontend.io
    http:
      paths:
      - path: /
        backend:
          serviceName: frontend
          servicePort: 80
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这其中的&lt;code&gt;backend&lt;/code&gt;中要配置default namespace中启动的service名字。&lt;code&gt;path&lt;/code&gt;就是URL地址后的路径，如traefik.frontend.io/path，service将会接受path这个路径，host最好使用service-name.filed1.filed2.domain-name这种类似主机名称的命名方式，方便区分服务。&lt;/p&gt;

&lt;p&gt;根据你自己环境中部署的service的名字和端口自行修改，有新service增加时，修改该文件后可以使用&lt;code&gt;kubectl replace -f traefik.yaml&lt;/code&gt;来更新。&lt;/p&gt;

&lt;p&gt;我们现在集群中已经有两个service了，一个是nginx，另一个是官方的&lt;code&gt;guestbook&lt;/code&gt;例子。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;创建Depeloyment&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-Yaml&#34;&gt;apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: traefik-ingress-lb
  namespace: kube-system
  labels:
    k8s-app: traefik-ingress-lb
spec:
  template:
    metadata:
      labels:
        k8s-app: traefik-ingress-lb
        name: traefik-ingress-lb
    spec:
      terminationGracePeriodSeconds: 60
      hostNetwork: true
      restartPolicy: Always
      serviceAccountName: ingress
      containers:
      - image: traefik
        name: traefik-ingress-lb
        resources:
          limits:
            cpu: 200m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
        ports:
        - name: http
          containerPort: 80
          hostPort: 80
        - name: admin
          containerPort: 8580
          hostPort: 8580
        args:
        - --web
        - --web.address=:8580
        - --kubernetes
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注意我们这里用的是Deploy类型，没有限定该pod运行在哪个主机上。Traefik的端口是8580。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Traefik UI&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;apiVersion: v1
kind: Service
metadata:
  name: traefik-web-ui
  namespace: kube-system
spec:
  selector:
    k8s-app: traefik-ingress-lb
  ports:
  - name: web
    port: 80
    targetPort: 8580
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: traefik-web-ui
  namespace: kube-system
spec:
  rules:
  - host: traefik-ui.local
    http:
      paths:
      - path: /
        backend:
          serviceName: traefik-web-ui
          servicePort: web
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;配置完成后就可以启动treafik ingress了。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kubectl create -f .
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;我查看到traefik的pod在&lt;code&gt;172.20.0.115&lt;/code&gt;这台节点上启动了。&lt;/p&gt;

&lt;p&gt;访问该地址&lt;code&gt;http://172.20.0.115:8580/&lt;/code&gt;将可以看到dashboard。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://olz1di9xf.bkt.clouddn.com/traefik-dashboard.jpg&#34; alt=&#34;kubernetes-dashboard&#34; /&gt;&lt;/p&gt;

&lt;p&gt;左侧黄色部分部分列出的是所有的rule，右侧绿色部分是所有的backend。&lt;/p&gt;

&lt;h2 id=&#34;测试&#34;&gt;测试&lt;/h2&gt;

&lt;p&gt;在集群的任意一个节点上执行。假如现在我要访问nginx的&amp;rdquo;/&amp;ldquo;路径。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ curl -H Host:traefik.nginx.io http://172.20.0.115/
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;title&amp;gt;Welcome to nginx!&amp;lt;/title&amp;gt;
&amp;lt;style&amp;gt;
    body {
        width: 35em;
        margin: 0 auto;
        font-family: Tahoma, Verdana, Arial, sans-serif;
    }
&amp;lt;/style&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;Welcome to nginx!&amp;lt;/h1&amp;gt;
&amp;lt;p&amp;gt;If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;For online documentation and support please refer to
&amp;lt;a href=&amp;quot;http://nginx.org/&amp;quot;&amp;gt;nginx.org&amp;lt;/a&amp;gt;.&amp;lt;br/&amp;gt;
Commercial support is available at
&amp;lt;a href=&amp;quot;http://nginx.com/&amp;quot;&amp;gt;nginx.com&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;&amp;lt;em&amp;gt;Thank you for using nginx.&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果你需要在kubernetes集群以外访问就需要设置DNS，或者修改本机的hosts文件。&lt;/p&gt;

&lt;p&gt;在其中加入：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;172.20.0.115 traefik.nginx.io
172.20.0.115 traefik.frontend.io
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;所有访问这些地址的流量都会发送给172.20.0.115这台主机，就是我们启动traefik的主机。&lt;/p&gt;

&lt;p&gt;Traefik会解析http请求header里的Host参数将流量转发给Ingress配置里的相应service。&lt;/p&gt;

&lt;p&gt;修改hosts后就就可以在kubernetes集群外访问以上两个service，如下图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://olz1di9xf.bkt.clouddn.com/traefik-nginx.jpg&#34; alt=&#34;traefik-nginx&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://olz1di9xf.bkt.clouddn.com/traefik-guestbook.jpg&#34; alt=&#34;traefik-guestbook&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://www.colabug.com/thread-1703745-1-1.html&#34;&gt;Traefik-kubernetes 初试&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.tuicool.com/articles/ZnuEfay&#34;&gt;Traefik简介&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes/kubernetes/tree/master/examples/guestbook&#34;&gt;Guestbook example&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>